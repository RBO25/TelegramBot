import requests
import json
from config import keys


class APIException(Exception):
    pass

class get_price:
    @staticmethod
    def convert(quote: str, base: str, amount: float):
        if quote == base:
            raise APIException(f'–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –≤–∞–ª—é—Ç—ã:  {base}ü§Ø')

        try:
            quote_ticker = keys[quote]
        except KeyError:
            raise APIException(f'–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–ª–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –≤–∞–ª—é—Ç–∞:  {quote}ü§Ø')

        try:
            base_ticker = keys[base]
        except KeyError:
            raise APIException(f'–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–ª–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –≤–∞–ª—é—Ç–∞:  {base}ü§Ø')

        try:
            amount = float(amount)
        except ValueError:
            raise APIException(f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ:  {amount}ü§Ø')

        r = requests.get(f'https://min-api.cryptocompare.com/data/price?fsym={quote_ticker}&tsyms={base_ticker}')
        total_base = json.loads(r.content)[keys[base]]*amount

        return total_base